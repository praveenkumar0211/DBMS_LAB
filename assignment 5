--*****************************************************
--UCS1412                               B.Senthil Kumar
--Database Lab				Asst. Prof
--	    		    Computer Science Department
--            		     SSN College of Engineering 
--	                   	     senthil@ssn.edu.in
--*****************************************************
-- 	          PIZZA ORDERING DATASET
--                 Version 1.0
--                February 05, 2015
--*****************************************************
--Sources:
--         This dataset is prepared for the assignment
--	on DML, PL/SQL blocks in Database Programming.
--	This is a test dataset - pizza ordered on 28 & 29th Jun 2015.
--	Do NOT MODIFY the instances.
--
--******************************************************

REM: customer(cust_id, cust_name, address, phone)
REM: pizza (pizza_id, pizza_type, unit_price)
REM:orders(order_no, cust_id, order_date ,delv_date, total_amt)
REM: order_list(order_no, pizza_id, qty)
set serveroutput on;

drop table order_list;
drop table orders;
drop table pizza;
drop table customer;


REM: ------------------------------------------------------------------------------------------

REM: customer(cust_id, cust_name,address,phone)
create table customer(cust_id varchar2(20) constraint pk1 primary key,cust_name varchar2(20),address varchar2(30),phone number(10));

insert into customer values('c001','Hari','32 RING ROAD,ALWARPET',9001200031);
insert into customer values('c002','Ashok','42 bull ROAD,numgambakkam',9444120003);
insert into customer values('c003','Raj','12a RING ROAD,ALWARPET',9840112003);
insert into customer values('c004','Raghu','P.H ROAD,Annanagar',9845712993);
insert into customer values('c005','Sindhu','100 feet ROAD,vadapalani',9840166677);
insert into customer values('c006','Brinda','GST ROAD, TAMBARAM', 9876543210);

create table pizza(pizza_id varchar2(20) constraint pk2 primary key ,pizza_type varchar2(20),unit_price number(5));

REM pizza (pizza_id, pizza_type, unit_price)

insert into pizza values('p001','pan',130);
insert into pizza values('p002','grilled',230);
insert into pizza values('p003','italian',200);
insert into pizza values('p004','spanish',260);

REM insert into pizza values('p005','supremo',250);


create table orders(order_no varchar2(20) constraint pk3 primary key,cust_id varchar2(20) constraint foriegn1 references  customer(cust_id), order_date date,delv_date date);
REM orders(order_no, cust_id, order_date ,delv_date)

insert into orders values('OP100','c001','28-JUN-2015','30-JUN-2015');
insert into orders values('OP200','c002','28-JUN-2015','30-JUN-2015');
insert into orders values('OP300','c003','29-JUN-2015','01-JUL-2015');
insert into orders values('OP400','c004','29-JUN-2015','01-JUL-2015');
insert into orders values('OP500','c001','29-JUN-2015','01-JUL-2015');
insert into orders values('OP600','c002','29-JUN-2015','01-JUL-2015');



REM order_list(order_no, pizza_id, qty)
create table order_list(order_no varchar2(20) constraint foriegn2 references orders(order_no),pizza_id varchar2(20) constraint foriegn3 references pizza(pizza_id),qty number(2));
insert into order_list values('OP100','p001',3);
insert into order_list values('OP100','p002',2);
insert into order_list values('OP100','p003',1);
insert into order_list values('OP100','p004',5);

insert into order_list values('OP200','p003',2);
insert into order_list values('OP200','p001',6);
insert into order_list values('OP200','p004',8);

insert into order_list values('OP300','p003',3);

insert into order_list values('OP400','p001',3);
insert into order_list values('OP400','p004',1);

insert into order_list values('OP500','p003',6);
insert into order_list values('OP500','p004',5);
insert into order_list values('OP500','p001',null);

insert into order_list values('OP600','p002',3);

REM:******************************************************
REM:***CREATION AND INSERTION DONE*****
REM:******************************************************


REM:******************************************************
REM:****DISPALYING OF PROCEDURES***********
REM:******************************************************


REM:1)Check whether the given pizza type is available. If not display appropriate message

DECLARE
pty pizza.pizza_type%type;
BEGIN
pty:='&pizza_type';
update pizza set unit_price=unit_price+0 where pizza_type=pty;
if SQL%FOUND then
dbms_output.put_line(pty ||' is available');
else
dbms_output.put_line(pty ||' is not available');
end if;
END;
/

REM:2)For the given customer name and a range of order date, find whether a customer had
REM:placed any order, if so display the number of orders placed by the customer along 
REM:with the order number(s).

declare
customer_name varchar2(20);
date1 date;
date2 date;
id customer.cust_id%type;
no_of_orders int;
cursor c1 is select * from orders;
begin
	customer_name := '&name';
	date1 := '&date1';
	date2 := '&date2';
	no_of_orders := 0;
	select cust_id into id from customer where cust_name = customer_name;
	dbms_output.put_line('Customer Name = '|| customer_name);
	dbms_output.put_line('Orders : ');
	for cur in c1 loop
		if(cur.cust_id = id and cur.order_date >= date1 and cur.order_date <=date2 ) then
			dbms_output.put_line(cur.order_no);
			no_of_orders:=no_of_orders+1;
		end if;
	end loop;
	if (no_of_orders =0) then
	dbms_output.put_line('No Orders');
	else
	dbms_output.put_line('Total Order = '|| no_of_orders);
	end if;
	EXCEPTION
	when no_data_found then
	dbms_output.put_line('Customer Not Available');
	end;
/
REM :3)Display the customer name along with the details of pizza type and its quantity 
REM :ordered for the given order number.
declare
oid varchar2(20);
total int;
cus_name customer.cust_name%type;
cus_id customer.cust_id%type;
cursor c2 is select o.order_no,p.pizza_type,o.qty from order_list o,pizza p where o.pizza_id=p.pizza_id;
begin
total:=0;
oid:= '&oid';
select cust_id into cus_id from orders where order_no= oid;
select cust_name into cus_name from customer where cust_id = cus_id;
dbms_output.put_line('Customer name : '||cus_name);
dbms_output.put_line('PIZZA TYPE	QTY');
for cur in c2 loop
if(cur.order_no=oid) then
dbms_output.put_line(cur.pizza_type||'		'||cur.qty);
total:=total+cur.qty;
end if;
end loop;
dbms_output.put_line('------------------------------');
	dbms_output.put_line('Total Qty : '||total);
	EXCEPTION
	when no_data_found then
	dbms_output.put_line('Order id Not Available');
	end;
/

REM:3)Display the total number of orders that contains one pizza type, two pizza type and so on.
declare
    cursor c4 is select distinct order_no from order_list;
    cursor c5 is select * from order_list;
    one int(1);
    two int(1);
    three int(1);
    four int(1);
    ct int(1);
begin
	one:=0;
	three:=0;
	two:=0;
	four:=0;
	for cur in c4 loop
		ct:=0;
		for cust in c5 loop
			if(cur.order_no = cust.order_no and cust.qty is not NULL) then
				ct:=ct+1;
			end if;
		end loop;
		if(ct > 3) then
			four:=four+1;
		elsif(ct > 2) then
			three:=three+1;
		elsif(ct > 1) then
			two:=two+1;
		elsif(ct = 1) then
			one:=one+1;
		end if;
	end loop;
	dbms_output.put_line('No. of orders that contains');
	dbms_output.put_line('Only one Pizza type : '||one);
	dbms_output.put_line('Two Pizza type : '||two);
	dbms_output.put_line('Three Pizza type : '||three);
	dbms_output.put_line('ALL Pizza type : '||four);
end;
/
/
